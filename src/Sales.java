
//import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
//import javax.swing.table.DefaultTableModel;
import shopmanagementsystem.ShopManagementSystem;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP1
 */
public class Sales extends javax.swing.JFrame {

    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblsales = new javax.swing.JLabel();
        lblcustomer = new javax.swing.JLabel();
        lblproduct = new javax.swing.JLabel();
        lblquantity = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        lblprice = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        btnrecord = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtProductId = new javax.swing.JTextField();
        txtcustomerId = new javax.swing.JTextField();
        btnViewSales = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblsales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblsales.setText("SALES FORM");

        lblcustomer.setText("CUSTOMER ID");

        lblproduct.setText("PRODUCT ID");

        lblquantity.setText("QUANTITY");

        lblprice.setText("PRICE PER ITEM");

        btnrecord.setText("RECORD SALES");
        btnrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrecordActionPerformed(evt);
            }
        });

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnViewSales.setText("VIEW SALES");
        btnViewSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSalesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblsales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblcustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblproduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblquantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtquantity)
            .addComponent(lblprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtprice)
            .addComponent(btnrecord, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
            .addComponent(txtProductId)
            .addComponent(txtcustomerId)
            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnViewSales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblsales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblcustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtcustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblproduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblquantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblprice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnrecord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewSales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(
        this,
        "Are you sure you want to exit?",
        "Exit",
        JOptionPane.YES_NO_OPTION
    );
    if (confirm == JOptionPane.YES_OPTION) {
        System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrecordActionPerformed

        // Retrieve IDs from text fields and validate they are not empty.
    String customerIdText = txtcustomerId.getText().trim();
    String productIdText = txtProductId.getText().trim();
    
    if(customerIdText.isEmpty() || productIdText.isEmpty()){
         JOptionPane.showMessageDialog(this, "Customer ID and Product ID must be provided.");
         return;
    }
    
    int customerId, productId;
    try {
        customerId = Integer.parseInt(customerIdText);
        productId = Integer.parseInt(productIdText);
    } catch(NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid IDs. Please enter numeric values.");
        return;
    }
    
    try (Connection conn = ShopManagementSystem.getConnection()) {
        // Check if the customer exists
        PreparedStatement stmtCustomer = conn.prepareStatement("SELECT COUNT(*) FROM customers WHERE customer_id = ?");
        stmtCustomer.setInt(1, customerId);
        ResultSet rsCustomer = stmtCustomer.executeQuery();
        if(rsCustomer.next() && rsCustomer.getInt(1) == 0) {
            JOptionPane.showMessageDialog(this, "Customer ID does not exist in the database.");
            return;
        }
        
        // Check if the product exists and retrieve its price
        PreparedStatement stmtProduct = conn.prepareStatement("SELECT price FROM products WHERE product_id = ?");
        stmtProduct.setInt(1, productId);
        ResultSet rsProduct = stmtProduct.executeQuery();
        double pricePerUnit = 0.0;
        if(rsProduct.next()){
            pricePerUnit = rsProduct.getDouble("price");
        } else {
            JOptionPane.showMessageDialog(this, "Product ID does not exist in the database.");
            return;
        }
        
        // Get quantity from text field
        int quantity = Integer.parseInt(txtquantity.getText());
        double totalPrice = pricePerUnit * quantity;
        txtprice.setText(String.valueOf(totalPrice));  // Display total price
        
        // Insert the sale into the database
        PreparedStatement stmtSale = conn.prepareStatement(
            "INSERT INTO sales (customer_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)"
        );
        stmtSale.setInt(1, customerId);
        stmtSale.setInt(2, productId);
        stmtSale.setInt(3, quantity);
        stmtSale.setDouble(4, totalPrice);
        
        int rowsInserted = stmtSale.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(this, "Sale recorded successfully.");
            new ViewSales().setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to record sale. Please try again.");
        }
    } catch (Exception e) {
         e.printStackTrace();
         JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_btnrecordActionPerformed

    private void btnViewSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSalesActionPerformed
        // TODO add your handling code here:
        new ViewSales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnViewSalesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnViewSales;
    private javax.swing.JButton btnrecord;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblcustomer;
    private javax.swing.JLabel lblprice;
    private javax.swing.JLabel lblproduct;
    private javax.swing.JLabel lblquantity;
    private javax.swing.JLabel lblsales;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtcustomerId;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    // End of variables declaration//GEN-END:variables
}
